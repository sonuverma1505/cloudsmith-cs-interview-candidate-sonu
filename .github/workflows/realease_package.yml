name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Get OIDC token
        run: |
          echo "Fetching OIDC token..."
          OIDC_RESPONSE=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange")
          
          echo "OIDC Response:"
          echo "$OIDC_RESPONSE"
      
          # Extract token value
          OIDC_TOKEN=$(echo "$OIDC_RESPONSE" | jq -r '.value')
          
          echo "Using OIDC token for Cloudsmith API..."
          CLOUDSMITH_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":\"$OIDC_TOKEN\", \"service_slug\":\"test\"}" https://api.cloudsmith.io/openid/isv/)
          
          echo "Cloudsmith API Response:"
          echo "$CLOUDSMITH_RESPONSE"
        
      
      - name: Push Python package to Cloudsmith
        uses: cloudsmith-io/action@v0.5.3
        with:
          command: 'push'
          format: 'python'
          owner: ${{ env.CLOUDSMITH_NAMESPACE }}
          repo: ${{ env.CLOUDSMITH_REPOSITORY }}
          file: 'dist/*.tar.gz'
          republish: 'true'
          api-key: ${{ env.CLOUDSMITH_API_KEY }}  # Use retrieved OIDC token